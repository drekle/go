// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	message.proto

It has these top-level messages:
	UrlRequest
	UrlResponse
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type UrlRequest struct {
	Url string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
}

func (m *UrlRequest) Reset()                    { *m = UrlRequest{} }
func (m *UrlRequest) String() string            { return proto.CompactTextString(m) }
func (*UrlRequest) ProtoMessage()               {}
func (*UrlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *UrlRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type UrlResponse struct {
	// Empty request for future support
	Valid bool `protobuf:"varint,1,opt,name=valid" json:"valid,omitempty"`
}

func (m *UrlResponse) Reset()                    { *m = UrlResponse{} }
func (m *UrlResponse) String() string            { return proto.CompactTextString(m) }
func (*UrlResponse) ProtoMessage()               {}
func (*UrlResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UrlResponse) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func init() {
	proto.RegisterType((*UrlRequest)(nil), "api.UrlRequest")
	proto.RegisterType((*UrlResponse)(nil), "api.UrlResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for URL service

type URLClient interface {
	Register(ctx context.Context, in *UrlRequest, opts ...grpc.CallOption) (*UrlResponse, error)
}

type uRLClient struct {
	cc *grpc.ClientConn
}

func NewURLClient(cc *grpc.ClientConn) URLClient {
	return &uRLClient{cc}
}

func (c *uRLClient) Register(ctx context.Context, in *UrlRequest, opts ...grpc.CallOption) (*UrlResponse, error) {
	out := new(UrlResponse)
	err := grpc.Invoke(ctx, "/api.URL/register", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for URL service

type URLServer interface {
	Register(context.Context, *UrlRequest) (*UrlResponse, error)
}

func RegisterURLServer(s *grpc.Server, srv URLServer) {
	s.RegisterService(&_URL_serviceDesc, srv)
}

func _URL_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UrlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(URLServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.URL/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(URLServer).Register(ctx, req.(*UrlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _URL_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.URL",
	HandlerType: (*URLServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "register",
			Handler:    _URL_Register_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "message.proto",
}

func init() { proto.RegisterFile("message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 142 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0x4d, 0x2d, 0x2e,
	0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x54, 0x92,
	0xe3, 0xe2, 0x0a, 0x2d, 0xca, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe0, 0x62,
	0x2e, 0x2d, 0xca, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0x31, 0x95, 0x94, 0xb9, 0xb8,
	0xc1, 0xf2, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42, 0x22, 0x5c, 0xac, 0x65, 0x89, 0x39, 0x99,
	0x29, 0x60, 0x25, 0x1c, 0x41, 0x10, 0x8e, 0x91, 0x19, 0x17, 0x73, 0x68, 0x90, 0x8f, 0x90, 0x3e,
	0x17, 0x47, 0x51, 0x6a, 0x7a, 0x66, 0x71, 0x49, 0x6a, 0x91, 0x10, 0xbf, 0x5e, 0x62, 0x41, 0xa6,
	0x1e, 0xc2, 0x68, 0x29, 0x01, 0x84, 0x00, 0xc4, 0x2c, 0x25, 0x86, 0x24, 0x36, 0xb0, 0x43, 0x8c,
	0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x61, 0x00, 0xcf, 0x45, 0x99, 0x00, 0x00, 0x00,
}
